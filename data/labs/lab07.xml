<?xml version="1.0" encoding="UTF-8"?>
<!--
Lab 06 - XML with constraints
-->
<lab status="1.2">
    <!-- Activity metadata ... override anything from the course or organizer -->
    
    <!-- The meat of the presentation -->
    <slide title="Lab Goals" layout="normal">
        <p>The purpose of this lab is to help you explore and practice
            XML document constraining and construction.</p>
        <p>Suggestion: you may want to skim the slideshow first,
            before working your way through it.</p>
        <p>The <a href="http://learn4711.local/show/tutorial/xml-xml01" 
                  target="_blank">Barker Bob tutorial</a> would be helpful, but isn't necessary.
            I suggest at least reading it. If you do complete it,
            nothing has to be handed in for that.
        </p>
    </slide>

    <slide title="Lab Submission" layout="normal">
        <p>This lab is expressly for a team of two or three.
            Singletons are welcome, with a 20% penalty.
            In any case, signup for a lab07 group. You will be using
            the same group and repository for the next lab too.</p>
        <p>There is no starter repo; you will need to create
            one for this lab. If you want to include the CodeIgniter
            starter in it, in preparation for next week (hint, hint),
            that is fine. The only repository components I will be looking at in
            this lab are the DTD and XML files in your <code>data</code>
            folder.
        </p>
        <p>Submit a readme or comment to the lab dropbox, with. 
            a link to your github repository.</p>
        <p>Due: Five days after your lab, at 17:30</p>
    </slide>

    <slide title="Lab Marking Guideline" layout="normal">
        <ul>
            <li>4 marks for the DTD, described later in this writeup</li>
            <li>1 mark for properly completing each of the 3 XML documents or fragments prescribed</li>
            <li>1 mark for validation of the properly bound XML single document or master document</li>
            <li>2 marks for reasonable gitflow workflow</li>
        </ul>
    </slide>

    <slide title="Source Data" layout="normal">
        <div class="left">
            <p>Each set has a timetable, spanning multiple days, class periods,
                courses, rooms and instructors. An example is shown to the right.</p>
            <p>For this lab, use your set's winter2016 timetable.</p>
                    
        </div>
        <div class="right">
            <img class="scale" width="600" height="420" src="/data/labs/pix/SampleTimetable.png"/>
        </div>
    </slide>

    <slide title="Source Data Interpreted" layout="normal">
        <div class="left">
            <p>We are interested in three of the
                perspectives: day of week, class period, and course.
                The first two of those are highlighted right.</p>
            <p>Referring to the sample timetable, the "friday" day of week perspective
                includes a single row, with 3 scheduled classed. The "10:30" class period perspective
                includes a single column, with 4 scheduled classes. Some of the scheduled
                periods are colour-coded ... we are only interested in those after
                spring break, i.e. those with no background or those with a tan background.</p>
        </div>
        <div class="right">
            <img class="scale" width="600" height="420" src="/data/labs/pix/SampleTimetable2.png"/>
        </div>
    </slide>
    
    <slide title="Model Your Data" layout="normal">
        <p>With the other members of your team, choose a modeling strategy for
            your timetable data.</p>
        <p>I suggest looking at the different strategies reflected
            in the example-xml repository, and choosing one.</p>
        <p>Your data can be modeled all in one file, with separate child elements
            for each facet (perspective), or you could use three separate
            XML documents, one per facet, and pull them together in a master
            XML document with external entities.
        </p>
        <p>Whatever strategy you choose, your DTD will need to accommodate it.</p>
    </slide>

    <slide title="Build Your DTD" layout="normal">
        <p>Build your DTD, to suit the strategy you chose.
            This DTD should handle the timetable data for an entire week, not
            just the portions of data you will be providing.</p>
        <p>You will need to agree on conventions and codes to use
            across the different data perspectives.</p>
        <p>Provide for all the timetable data relevant to a class period: 
            course, day, period/hour, instructor, and room. These
            will be used next week :)</p>
        <p>The DTD should go inside your <code>data</code> folder.</p>
    </slide>

    <slide title="Build Your XML" layout="normal">
        <p>Each of the three facets should be built by a separate
            team member, either as a stand-alone XML document or as
            part of a master XML document, discussed earlier.</p>
        <p>Eligible candidates for each facet would be a column, row
            or course with at least three class periods scheduled.</p>
            <p>You are welcome to provide more than one element for a facet,
            for instance two days worth, or even the entire week.</p>
    </slide>

    <slide title="Ensure Validation" layout="normal">
        <p>Your XML document, or master document if using external
            entities, must validate.</p>
        <p>Test this inside your IDE, or use an external service, like
            http://www.xmlvalidation.com/</p>
    </slide>


</lab>
